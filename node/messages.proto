syntax="proto3";
package node;


message AddressState {
	bytes Balance = 1;
	bytes Nounce  = 2;
}

message Block {
    int64 Timestamp = 1;
    bytes Data = 2;
    bytes PrevBlockHash = 3;
    bytes Hash = 4;
    bytes Signature = 5;
    repeated Transaction Transactions = 6;
}

message Transaction {
    bytes Hash = 1;
    string PubKey = 2;
    string Nounce = 3;
    bytes Data = 4;
    string From = 5;
    string To = 6;
    string Value = 7;
    string TransactionFees = 8;
    bytes Signature = 9;
    bytes Chain = 10;
}



enum TransactionDataPayloadType {
    NONE = 0;
    UPDATE_BLOCKCHAIN_SETTINGS = 1;
    CREATE_NODE = 2;
    UPDATE_NODE = 3;
    DATA_CONTRACT = 4;
}

message TransactionDataPayload {
    TransactionDataPayloadType Type = 1;
    bytes Payload = 2;
}

message ChanNodeEnvelop {
    repeated ChanNode Nodes = 1;
}

enum ChanNodeType {
    INVALIDNODE = 0;
    FILE = 1;
    DIR = 2;
    CHANNEL = 3;
    SUBCHANNEL = 4;
    ENTRY = 5;
    OTHER = 6;
}

message ChanNode {
    string Name = 1;
    string Hash = 2;
    string BinlayerHash = 3;
    string Size = 4;
    string Owner = 5;
    bool Enabled = 6;
    ChanNodeType NodeType = 7;
    string ParentHash = 8;
    string Description = 9;
    string ContentType = 10;
    repeated string Attributes = 11;
    repeated string Admins = 12;
    repeated string Posters = 13;
    int64 Timestamp = 14;
}

message BinlayerBinaryItem {
    string BinaryHash = 1;
    string FilePath = 2;
    int64 Size = 3;
}

message DataQueryRequest {
    repeated string Nodes = 1;
    string FromPeerAddr = 2;
    string Hash = 3;
    int64 Timestamp = 4;
}

message DataQueryResponse {
    repeated string UnavailableNodes = 1;
    string FromPeerAddr = 2;
    string TotalFeesRequired = 3;
    string Hash = 4;
    bytes PubKey = 5;
    bytes Signature = 6;
    repeated bytes Nodes = 7;
    int64 Timestamp = 8;
}

message DataContract {
    DataQueryResponse HostResponse = 1;
    bytes VerifierPubKey = 2;
    bytes RequesterNodePubKey = 3;
}


message GossipPayload {
    enum GossipPayloadType {
        BLOCK = 0;
        TRANSACTION = 1;
        DATA_QUERY_REQUEST = 2;
    }
    GossipPayloadType Type = 1;
    bytes Payload = 2;
}


message NodeHeightResponse {
    uint64 NodeHeight = 1;
}

message BlockQueryRequest {
    uint64 BlockNoFrom = 1;
    uint64 BlockNoTo = 2;
}

message BlockQueryResponse {
    uint64 From = 1;
    uint64 To = 2;
    repeated Block Payload = 3;
    bool Error = 4;
    uint64 NodeHeight = 5;
}
